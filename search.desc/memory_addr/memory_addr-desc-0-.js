searchState.loadedDescShard("memory_addr", 0, "memory_addr\nA range of a given memory address type <code>A</code>.\nA trait for memory address types.\nThe size of a 4K page (4096 bytes).\nA page-by-page iterator.\nA <code>PageIter</code> for 4K pages.\nA physical memory address.\nA range of physical addresses <code>PhysAddr</code>.\nA virtual memory address.\nA range of virtual addresses <code>VirtAddr</code>.\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nConverts the given range expression into <code>AddrRange</code>. Panics …\nAlign address downwards.\nAligns the address downwards to the given alignment.\nAligns the address downwards to the given alignment.\nAlign address downwards to 4096 (bytes).\nAligns the address downwards to 4096 (bytes).\nAligns the address downwards to 4096 (bytes).\nReturns the offset of the address within the alignment.\nReturns the offset of the address within the given …\nReturns the offset of the address within the given …\nReturns the offset of the address within a 4K-sized page.\nReturns the offset of the address within a 4K-sized page.\nReturns the offset of the address within a 4K-sized page.\nAlign address upwards.\nAligns the address upwards to the given alignment.\nAligns the address upwards to the given alignment.\nAlign address upwards to 4096 (bytes).\nAligns the address upwards to 4096 (bytes).\nAligns the address upwards to 4096 (bytes).\nConverts the virtual address to a mutable raw pointer.\nConverts the virtual address to a mutable raw pointer of a …\nConverts the virtual address to a raw pointer.\nConverts the virtual address to a raw pointer of a …\nConverts an <code>PhysAddr</code> to an <code>usize</code>.\nConverts an <code>VirtAddr</code> to an <code>usize</code>.\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts another address from the address to get the …\nSubtracts another address from the address to get the …\nChecks if the range is contained in the given address …\nChecks if the range contains the given address.\nChecks if the range contains the given address range.\nCreates a new address type by wrapping an <code>usize</code>.\nCreates implementations for the <code>Debug</code>, <code>LowerHex</code>, and …\nThe upper bound of the range (exclusive).\nThe upper bound of the range (exclusive).\nThe upper bound of the range (exclusive).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new virtual address from a mutable raw pointer.\nCreates a new virtual address from a raw pointer.\nCreates a new address range from the start address and the …\nCreates a new address range from the start address and the …\nConverts an <code>usize</code> to an <code>PhysAddr</code>.\nConverts an <code>usize</code> to an <code>VirtAddr</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether the address has the demanded alignment.\nChecks whether the address has the demanded alignment.\nChecks whether the address has the demanded alignment.\nChecks whether the address is 4K-aligned.\nChecks whether the address is 4K-aligned.\nChecks whether the address is 4K-aligned.\nReturns <code>true</code> if the range is empty.\nCreates a new <code>PageIter</code>.\nCreates a new address range from the start and end …\nCreates a new address range from the given range without …\nAdds a given offset to the address to get a new address.\nAdds a given offset to the address to get a new address.\nGets the distance between two addresses.\nGets the distance between two addresses.\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts another address from the address to get the …\nSubtracts another address from the address to get the …\nChecks if the range overlaps with the given address range.\nAlias for <code>PhysAddr::from_usize</code>.\nConverts the given range expression into <code>PhysAddrRange</code>. …\nReturns the size of the range.\nThe lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nThe lower bound of the range (inclusive).\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts another address from the address to get the …\nSubtracts another address from the address to get the …\nCreates a new address range from the start address and the …\nCreates a new address range from the given range.\nAlias for <code>VirtAddr::from_usize</code>.\nConverts the given range expression into <code>VirtAddrRange</code>. …\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nAdds a given <strong>unsigned</strong> offset to the address to get a new …\nAdds a given offset to the address to get a new address.\nAdds a given offset to the address to get a new address.\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts a given <strong>unsigned</strong> offset from the address to get …\nSubtracts another address from the address to get the …\nSubtracts another address from the address to get the …")